[//coloca na index
client.on('message', async msg => {
        if (msg.author.bot) return;
        if (msg.channel.type == 'dm') return;
        if (!msg.content.startsWith(config.prefix)) return;
        const args = msg.content.slice(config.prefix.length).trim().split(/ +/g);
        const comando = args.shift().toLowerCase();
        

        if (comando == 'giveaway') {
                if (!msg.member.hasPermission('ADMINISTRATOR')) return;
                var regra = /^[0-9]+$/;
                if (!args[0].match(regra)) return;
                if (args[0] < 1) return;
                let owner = msg.author;
                let timer = args[0]
                args.shift()
                let premio = args.join(" ")
                if (premio == "") return;
                let embed = new Discord.MessageEmbed()
                        .setAuthor(owner.tag, owner.displayAvatarURL({ format: 'png' }))
                        .setColor('#000cff')
                        .setDescription(`React to that message with ðŸŽ‰ to participate in the draw !!`)
                        .addFields(
                                { name: "Author", value: `${owner}`, inline: true },
                                { name: "Premium", value: `${premio}`, inline: true },
                                { name: "min", value: `${timer}min`, inline: true }
                        )
                        .setThumbnail(owner.displayAvatarURL({ format: 'png' }))
                        .setTitle('Giveaway!!')
                        .setFooter(`Draw offered by the user: ${owner.tag}`)
                        .setTimestamp();
                let message = await msg.channel.send(embed)
                let reactions = ['ðŸŽ‰']
                let participantes = []
                await message.react(reactions[0])
                const filter = (reaction) => reactions.includes(reaction.emoji.name);
                const collector = message.createReactionCollector(filter, { time: timer * 1000 * 60, dispose: true })

                collector.on('collect', async (emoji, user) => {
                        switch (emoji._emoji.name) {
                                case reactions[0]:
                                        participantes.push(user.id)
                                        break;
                                default:
                                        break;
                        }
                })

                collector.on('dispose', async (emoji, user) => {
                        switch (emoji._emoji.name) {
                                case reactions[0]:
                                        let index = participantes.indexOf(user.id)
                                        if (index > -1) {
                                                participantes.splice(index, 1)
                                        }
                                        break;
                                default:
                                        break;
                        }
                })

                collector.on('end', async (emoji, user) => {
                        if (!participantes.length == 0) {
                                let n = Math.floor(Math.random() * (participantes.length))
                                let winnerID = participantes[n];
                                let winner = await msg.guild.members.fetch(winnerID)
                                let endmessage = new Discord.MessageEmbed()
                                        .setAuthor(winner.user.tag, winner.user.displayAvatarURL({ format: 'png' }))
                                        .setColor('#000cff')
                                        .setDescription(`Draw winner: ${winner.user.tag}`)
                                        .addFields(
                                                { name: "Author", value: `${owner}`, inline: true },
                                                { name: "Premium", value: `${premio}`, inline: true },
                                                { name: "Winner", value: `${winner.user}`, inline: true }
                                        )
                                        .setThumbnail(winner.user.displayAvatarURL({ format: 'png' }))
                                        .setTitle('Draw Closed !!')
                                        .setFooter(`Draw offered by the user: ${owner.tag}`)
                                        .setTimestamp();
                                await msg.channel.send(winner.user, endmessage)
                                message.delete();
                        } else {
                                let endmessage = new Discord.MessageEmbed()
                                        .setAuthor(owner.tag, owner.displayAvatarURL({ format: 'png' }))
                                        .setColor('#000cff')
                                        .setDescription(`There were no participants in the tournament.`)
                                        .addFields(
                                                { name: "Author", value: `${owner}`, inline: true },
                                                { name: "Premium", value: `${premio}`, inline: true },
                                                { name: "Winner", value: `NÃ£o Teve`, inline: true }
                                        )
                                        .setThumbnail(owner.displayAvatarURL({ format: 'png' }))
                                        .setTitle('Draw winner')
                                        .setFooter(`Draw offered by the user: ${owner.tag}`)
                                        .setTimestamp();
                                await msg.channel.send(endmessage)
                                message.delete();
                        }
                })
        }

})

  ]
